{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_resolvers/comment-edit.resolver.ts","webpack:///./src/app/_resolvers/user.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/comment.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base.ts","webpack:///./src/app/comment/comment-create/comment-create.component.css","webpack:///./src/app/comment/comment-create/comment-create.component.html","webpack:///./src/app/comment/comment-create/comment-create.component.ts","webpack:///./src/app/comment/comment-edit/comment-edit.component.css","webpack:///./src/app/comment/comment-edit/comment-edit.component.html","webpack:///./src/app/comment/comment-edit/comment-edit.component.ts","webpack:///./src/app/comment/comment-list/comment-list.component.css","webpack:///./src/app/comment/comment-list/comment-list.component.html","webpack:///./src/app/comment/comment-list/comment-list.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { CommentService } from '../_services/comment.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Comment } from '../_models/comment';\r\n\r\n@Injectable()\r\nexport class CommentEditResolver implements Resolve<Comment> {\r\n\r\n    constructor(private commentService: CommentService,\r\n        private alertify: AlertifyService,\r\n        private router: Router) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Comment> {\r\n        return this.commentService.getComment(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/comment-list']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserResolver implements Resolve<any> {\r\n    constructor(private userService: UserService,\r\n        private alertify: AlertifyService,\r\n        private router: Router) {}\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n            return this.userService.getUser().pipe(\r\n                catchError(error => {\r\n                    this.alertify.error('Problem retrieve username');\r\n                    this.router.navigate(['/comment-list']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\nconstructor() { }\r\n\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm(message, function(e) {\r\n      if (e) {\r\n        okCallback();\r\n      } else {}\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n  baseUrl = environment.apiUrl;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\nsubmit(model: any) {\r\n  return this.http.post(this.baseUrl + 'comment/submit', model);\r\n}\r\n\r\ngetComment(id): Observable<Comment> {\r\n  return this.http.get<Comment>(this.baseUrl + 'comment/' + id);\r\n}\r\n\r\ngetComments(): Observable<Comment[]> {\r\n  return this.http.get<Comment[]>(this.baseUrl + 'comment');\r\n}\r\n\r\nsubmitMulti(comments: any) {\r\n  return this.http.post(this.baseUrl + 'comment/submitmulti', comments);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\ngetUser(): Observable<any> {\r\n  return this.http.get(this.baseUrl + 'values/user');\r\n}\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<!-- <app-comment></app-comment> -->\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Lucid Portal App';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { CommentService } from './_services/comment.service';\r\nimport { CommentListComponent } from './comment/comment-list/comment-list.component';\r\nimport { CommentCreateComponent } from './comment/comment-create/comment-create.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { appRoutes } from './routes';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CommentEditComponent } from './comment/comment-edit/comment-edit.component';\r\nimport { AlertifyService } from './_services/alertify.service';\r\nimport { CommentEditResolver } from './_resolvers/comment-edit.resolver';\r\nimport { UserService } from './_services/user.service';\r\nimport { UserResolver } from './_resolvers/user.resolver';\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      NavComponent,\r\n      CommentListComponent,\r\n      CommentCreateComponent,\r\n      CommentEditComponent,\r\n      HomeComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      RouterModule.forRoot(appRoutes)\r\n   ],\r\n   providers: [\r\n      CommentService,\r\n      AlertifyService,\r\n      UserService,\r\n      CommentEditResolver,\r\n      UserResolver\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","export const producers = [\r\n    'Artesia Volumes',\r\n    'Caza',\r\n    'Centennial',\r\n    'Chevron',\r\n    'Chisholm',\r\n    'Cimarex',\r\n    'Concho - Legacy',\r\n    'Concho - Tankless',\r\n    'Devon',\r\n    'Devon Gathering Volumes',\r\n    'Energen',\r\n    'EOG - HP',\r\n    'EOG - LP',\r\n    'Lilis',\r\n    'Marathon',\r\n    'Matador',\r\n    'Mewbourne',\r\n    'MRC',\r\n    'Murchison',\r\n    'Others',\r\n    'Taprock',\r\n    'Total SC Processed Volumes',\r\n    'WPX',\r\n    'XTO - Corral Canyon',\r\n    'XTO - James Ranch',\r\n    'XTO - Other',\r\n    'XTO - Poker Lake',\r\n    'XTO - Remuda Basin',\r\n    'XTO - Twin Wells',\r\n    'XTO - Big Eddy'\r\n];\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n\\r\\n  <form #submitForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <!-- <div class=\\\"col\\\"> -->\\r\\n          <label for=\\\"selectProducer\\\">Producer</label>\\r\\n            <select id=\\\"selectProducer\\\" class=\\\"custom-select\\\" required name=\\\"producer\\\" [(ngModel)]=\\\"model.producer\\\">\\r\\n                <option *ngFor=\\\"let producer of producerList\\\">{{producer}}</option>\\r\\n              </select>\\r\\n          <!-- </div> -->\\r\\n        <div class=\\\"form-group mt-3\\\">\\r\\n          <textarea class=\\\"form-control\\\" required name=\\\"content\\\" [(ngModel)]=\\\"model.content\\\" placeholder=\\\"Add comment here....\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"exampleFormControlInput1\\\">Username</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" value={{user}} readonly name=\\\"username\\\" [(ngModel)]=\\\"model.createdBy\\\">\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"container\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"add()\\\">Add</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"container mt-5\\\">\\r\\n    <table class=\\\"table table-striped table-hover table-sm table-bordered text-center shadow\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Producer</th>\\r\\n          <th scope=\\\"col\\\">Content</th>\\r\\n          <th scope=\\\"col\\\">Delete</th>\\r\\n          <!-- <th scope=\\\"col\\\">Edit</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of commentList\\\">\\r\\n          <th scope=\\\"row\\\">1</th>\\r\\n          <td>{{item.producer}}</td>\\r\\n          <td>{{item.content}}</td>\\r\\n          <td><button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"removeComment(item)\\\"><i class=\\\"fa fa-trash\\\"></i></button></td>\\r\\n          <!-- <td><button type=\\\"button\\\" class=\\\"btn btn-link\\\" ng-click=\\\"testing()\\\"><i class=\\\"fa fa-edit\\\"></i></button></td> -->\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container mt-5 text-center\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"clicked\\\" type=\\\"submit\\\">Submit</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CommentService } from '../../_services/comment.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, } from '@angular/router';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { producers } from '../../base';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Component({\r\n  selector: 'app-comment-create',\r\n  templateUrl: './comment-create.component.html',\r\n  styleUrls: ['./comment-create.component.css']\r\n})\r\nexport class CommentCreateComponent implements OnInit {\r\n  @ViewChild('submitForm') formValues;\r\n  baseUrl = environment.apiUrl;\r\n  user: any;\r\n  model: any = {};\r\n  commentList: any = [];\r\n  producerList = producers;\r\n  clicked = false;\r\n\r\n  constructor(private commentService: CommentService,\r\n    private http: HttpClient, private router: Router,\r\n    private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    this.clicked = true;\r\n    this.commentService.submitMulti(this.commentList).subscribe(() => {\r\n      this.router.navigate(['/comment-list']);\r\n      this.alertify.success('Comment saved');\r\n    }, error => {\r\n      this.alertify.error('A comment for this Producer may already exist for today.');\r\n    });\r\n  }\r\n\r\n  // getUser() {\r\n  //   this.http.get(this.baseUrl + 'values/user', {responseType: 'text'}).subscribe(user => {\r\n  //     this.user = user;\r\n  //   }, error => {\r\n  //     console.log(error);\r\n  //   });\r\n  // }\r\n\r\n  add() {\r\n    if ('producer' in this.model && 'content' in this.model) {\r\n      const modelToAdd = Object.assign({}, this.model);\r\n      if (!this.checkComments(modelToAdd.producer)) {\r\n        this.commentList.push(modelToAdd);\r\n        this.formValues.resetForm();\r\n      } else {\r\n        this.alertify.error('A comment for this producer has already been added.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkComments(producer: string) {\r\n    for (let i = 0; i < this.commentList.length; i++) {\r\n      if (this.commentList[i].producer === producer) {\r\n        return true;\r\n      }\r\n    }\r\n     return false;\r\n  }\r\n\r\n  removeComment(comment: any) {\r\n    this.commentList = this.commentList.filter((x: any) => {\r\n      return x !== comment;\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/comment-list']);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n<form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleFormControlInput1\\\">Username</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"{{comment.createdBy}}\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleFormControlSelect1\\\">Producer</label>\\r\\n      <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\r\\n        <option selected>{{comment.producer}}</option>\\r\\n        <option>2</option>\\r\\n        <option>3</option>\\r\\n        <option>4</option>\\r\\n        <option>5</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleFormControlTextarea1\\\">Content</label>\\r\\n      <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\">{{comment.content}}</textarea>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleFormControlInput1\\\">Date Created</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dateCreated\\\" placeholder=\\\"{{comment.created | date}}\\\" readonly>\\r\\n      </div>\\r\\n    <input class=\\\"btn btn-primary mr-2\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Comment } from '../../_models/comment';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CommentService } from 'src/app/_services/comment.service';\r\n\r\n@Component({\r\n  selector: 'app-comment-edit',\r\n  templateUrl: './comment-edit.component.html',\r\n  styleUrls: ['./comment-edit.component.css']\r\n})\r\nexport class CommentEditComponent implements OnInit {\r\n  comment: Comment;\r\n\r\n  constructor(private route: ActivatedRoute, private commentService: CommentService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.comment = data['comment'];\r\n    });\r\n  }\r\n\r\n  // loadComment() {\r\n  //   this.commentService.getComment(+this.route.snapshot.params['id']).subscribe((comment: Comment) => {\r\n  //     this.comment = comment;\r\n  //   }, error => {\r\n  //     console.log(error);\r\n  //   });\r\n  // }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\">\\r\\n    <table class=\\\"table table-striped table-hover table-sm table-bordered text-center shadow\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\" style=\\\"width: 2%\\\" class=\\\"align-middle\\\">ID</th>\\r\\n        <th scope=\\\"col\\\" style=\\\"width: 2%\\\" class=\\\"align-middle\\\">Producer</th>\\r\\n        <th scope=\\\"col\\\" style=\\\"width: 20%\\\" class=\\\"align-middle\\\">Content</th>\\r\\n        <th scope=\\\"col\\\" style=\\\"width: 2%\\\" class=\\\"align-middle\\\">Created By</th>\\r\\n        <th scope=\\\"col\\\" style=\\\"width: 10%\\\" class=\\\"align-middle\\\">Created Date</th>\\r\\n        <!-- <th scope=\\\"col\\\">Edit</th> -->\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let comment of comments\\\">\\r\\n        <th scope=\\\"row\\\">{{comment.id}}</th>\\r\\n        <td>{{comment.producer}}</td>\\r\\n        <td>{{comment.content}}</td>\\r\\n        <td>{{comment.createdBy}}</td>\\r\\n        <td>{{comment.created | date  }}</td>\\r\\n        <!-- <td><button class=\\\"btn btn-link\\\" [routerLink]=\\\"['/comment/', comment.id]\\\" routerLinkActive=\\\"router-link-active\\\" ><i class=\\\"fa fa-edit\\\"></i></button></td> -->\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-comment-list',\r\n  templateUrl: './comment-list.component.html',\r\n  styleUrls: ['./comment-list.component.css']\r\n})\r\nexport class CommentListComponent implements OnInit {\r\n  comments: any;\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.getComments();\r\n  }\r\n\r\n  getComments() {\r\n    this.http.get(this.baseUrl + 'comment').subscribe(response => {\r\n      this.comments = response;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3 class=\\\"text-center mt-3\\\">\\r\\n  Create Comments for Daily Volume Report\\r\\n</h3>\\r\\n<app-comment-create></app-comment-create>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Lucid Portal</a>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <!-- <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/comment-create']\\\">Create Comment</a>\\r\\n        </li> -->\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/comment-list']\\\">View All Comments</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { CommentCreateComponent } from './comment/comment-create/comment-create.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CommentListComponent } from './comment/comment-list/comment-list.component';\r\nimport { CommentEditComponent } from './comment/comment-edit/comment-edit.component';\r\nimport { CommentEditResolver } from './_resolvers/comment-edit.resolver';\r\nimport { UserResolver } from './_resolvers/user.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        children: [\r\n            { path: 'comment-create', component: CommentCreateComponent },\r\n            { path: 'comment-list', component: CommentListComponent },\r\n            { path: 'comment/:id', component: CommentEditComponent, resolve: {comment: CommentEditResolver} }\r\n        ]\r\n    },\r\n    { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","export const environment = {\r\n  production: true,\r\n  apiUrl: 'api/'\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}